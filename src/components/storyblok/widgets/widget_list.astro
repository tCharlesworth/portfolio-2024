---
import RenderSvg from "../../svg/aRenderSvg.astro"
const { blok } = Astro.props

let list_items = []

if(blok.list) {
  list_items = blok.list.split('\n')
}
---
<style is:global>
  .widget-list .heading {
    padding: 20px 25px;
    background-color: #08605f40;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    gap: 12px;
  }
  .widget-list .heading svg {
    width: 30px;
    height: 30px;
  }
  .widget-list ul {
    padding-left: 0px;
    display: inline-block;
    list-style-type: none;
  }
  .widget-list li {
    position: relative;
    margin-top: 20px;
  }
  .widget-list li::before {
    content: ' ';
    position: absolute;
    left: -25px;
    top: 50%;
    width: 5px;
    height: 5px;
    transform: rotate(45deg);
    background-color: #08605f;
  }
  .widget-list .list {
    text-align: center;
  }
  @media screen and (max-width: 768px) {
    .widget-list .heading {
      padding: 12px 16px;
    }
    .widget-list li {
      margin-top: 12px;
    }
  }
  .widget-list li:first-child {
    margin-top: 0px;
  }
</style>
<div class="widget-list">
  {blok.heading_text || blok.heading_icon ? (
    <div class="heading">
      {blok.heading_icon ? <RenderSvg id={blok.heading_icon} /> : null}
      {blok.heading_text ? <h3>{blok.heading_text}</h3> : null}
    </div>
  ) : null}
  {list_items ? (
    <div class="list">
      <ul>
        {list_items.map((item)=>{
          return (<li><p>{item}</p></li>)
        })}
      </ul>
    </div>
  ) : null}
</div>