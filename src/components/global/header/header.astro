---
import RenderIcon from "../../svg/aRenderSvg.astro"
import Link from "../../storyblok/link.astro"
import { useStoryblokApi } from "@storyblok/astro"
const VERSION = import.meta.env.STORYBLOK_VERSION

const storyblokApi = useStoryblokApi()
let blok = undefined;
const { data } = await storyblokApi.get("cdn/stories", {
  version: VERSION,
  content_type: "navbar"
})
if(data && data.stories) {
  blok = data.stories[0].content;
}
---
<style is:global>
  header {
    position: sticky;
    top: 0px;
    background-color: #fff;
    z-index: 100;
    box-shadow: rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 3px 1px -2px, rgba(0, 0, 0, 0.2) 0px 1px 5px 0px;
  }
  header a {
    text-decoration: none;
  }
  header a:hover, header a:focus {
    text-decoration: underline;
  }
  header>div {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }
  header nav {
    flex: 1;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
  }
  header .navigation {
    display: flex;
    flex-direction: row;
    gap: 12px;
    list-style-type: none;
    justify-content: flex-end;
  }
  header .logo {
    font-size: 40px;
  }
  header .logo a {
    padding-top: 16px;
    padding-bottom: 16px;
  }
  header a:visited {
    color: unset;
  }
  header .navigation {
    margin-top: 0px;
    margin-bottom: 0px;
    height: 100%;
  }
  header .navigation>li {
    height: 100%;
  }
  header .navlink {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
    min-height: 40px;
    padding-left: 12px;
    padding-right: 12px;
  }
  header .mobile-trigger {
    display: none;
    height: 100%;
    border: none;
    background: none;
  }
  header .mobile-trigger:hover {
    cursor: pointer;
  }
  @media screen and (max-width: 768px) {
    header .logo {
      font-size: 20px;
    }
    header .mobile-trigger {
      display: block;
    }
    header .navigation {
      position: fixed;
      background-color: #fff;
      z-index: 102;
      top: 0;
      right: -100%;
      bottom: 0;
      width: 80vw;
      max-width: 250px;
    }
    header .backdrop {
      position: fixed;
      z-index: 101;
      top: 0;
      left: 100%;
      bottom: 0;
      width: 100vw;
      background-color: #00000065;
    }
    nav.visible .backdrop {
      left: 0;
    }
    nav.visible .navigation {
      right: 0;
      flex-direction: column;
      justify-content: flex-start;
      padding-top: 40px;
    }
    nav.visible .navigation li {
      height: 42px;
    }
  }
</style>
<header>
  <div class="container">
    <div class="logo">
      <a href="/" class="navlink"><span>Tim Charlesworth</span></a>
    </div>
    <nav id="nav">
      <button id="mobilenavtrigger" class="mobile-trigger">
        <RenderIcon id="horizontal-lines" />
      </button>
      <ul class="navigation">
        {blok && blok.links ? blok.links.map((link)=>{
          let linkClasses = ["navlink"];
          if(link.background_color) {
            linkClasses.push("btn icon-btn background-"+link.background_color);
          }
          if(link.foreground_color) {
            linkClasses.push("text-"+link.foreground_color)
          }
          return (
            <li>
              <Link src={link.link} class:list={linkClasses}>
                <span>
                  {link.label ? <span>{link.label}</span> : null}
                  {link.icon ? <RenderIcon id={link.icon} /> : null}
                </span>
              </Link>
            </li>
          )
        }) : null}
      </ul>
      <div id="backdrop" class="backdrop" />
    </nav>
  </div>
</header>
<script is:inline>
  const nav = document.getElementById("nav");
  function toggleHeaderVisible() {
    nav.classList.toggle("visible");
  }
  const mobileNavTrigger = document.getElementById("mobilenavtrigger");
  if(mobileNavTrigger) {
    mobileNavTrigger.addEventListener("click", toggleHeaderVisible);
  }
  const backdropTrigger = document.getElementById("backdrop");
  if(backdropTrigger) {
    backdropTrigger.addEventListener("click", toggleHeaderVisible);
  }
  const linkTriggers = nav.querySelectorAll("a")
  linkTriggers.forEach((link)=>{
    link.addEventListener("click", toggleHeaderVisible);
  })
</script>